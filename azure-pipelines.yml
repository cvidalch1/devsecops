# Reto mibanco - Pipeline Azure DevSecOps

trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - 'iac-terraform-azure/*'

variables:
  serviceConnection: 'devsecops-connections'
  terraformWorkingDirectory: '$(System.DefaultWorkingDirectory)/iac-terraform-azure'
  terraformVersion: '1.3.1'

stages:
  - stage: Validate
    displayName: Validate - IaC (Tool Checkov)
    jobs:
    - job: Validate_job
      displayName: Validate_job
      pool:
        name: reto-mibanco
        demands:
        - agent.name -equals reto-mibanco  
      steps:
      - bash: $(terraformWorkingDirectory)/checkov.sh $(terraformWorkingDirectory)
        displayName: Checkov Static Code Analysis
  - stage: Deploy
    displayName: Deploy - IaC (Init, plan y apply)
    jobs:
    - job: Deploy_job
      displayName: Deploy_job
      pool:
        name: reto-mibanco
        demands:
        - agent.name -equals reto-mibanco  
      steps:
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        displayName: 'Install Terraform'
        inputs:
          terraformVersion: $(terraformVersion)
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
        displayName: 'Run terraform init'
        inputs:
          command: init
          workingDirectory: $(terraformWorkingDirectory)
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
        displayName: 'Run terraform plan'
        inputs:
          command: plan
          workingDirectory: $(terraformWorkingDirectory)
          environmentServiceName: $(serviceConnection)
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
        displayName: 'Run terraform apply'
        inputs:
          command: apply
          workingDirectory: $(terraformWorkingDirectory)
          environmentServiceName: $(serviceConnection)

